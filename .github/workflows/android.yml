name: Android APK Build

on:
  push:
    branches:
      - main  # 또는 'master', 저장소 브랜치 이름에 맞게

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y git zip unzip openjdk-11-jdk python3-pip python3-setuptools python3-wheel build-essential libtool libffi-dev libssl-dev
          pip install --upgrade pip
          pip install buildozer cython

      - name: Install Android SDK cmdline-tools
        run: |
          mkdir -p $HOME/android-sdk/cmdline-tools
          cd $HOME/android-sdk/cmdline-tools
          curl -o tools.zip https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
          unzip tools.zip -d cmdline-tools
          mkdir -p $HOME/.android && touch $HOME/.android/repositories.cfg
          export ANDROID_SDK_ROOT=$HOME/android-sdk
          yes | $HOME/android-sdk/cmdline-tools/cmdline-tools/bin/sdkmanager --sdk_root=$HOME/android-sdk --licenses

      - name: Accept Android SDK licenses
        run: |
          yes | $HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager --sdk_root=$HOME/android-sdk --licenses


      - name: Accept Android SDK licenses
        run: yes | sdkmanager --licenses


      - name: Build APK
        run: |
          buildozer init
          sed -i 's/package.name = .*/package.name = kleagueapp/' buildozer.spec
          sed -i 's/package.domain = .*/package.domain = org.kleague/' buildozer.spec
          sed -i 's/^# version = .*/version = 1.0/' buildozer.spec
          buildozer -v android debug

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: kleague-app-debug.apk
          path: bin/*.apk
